For 3D:
follow RDKit - Conformer Generation Postprocessing detailed in (pubs.acs.org/doi/10.1021/ci2004658)

(1) for each molecule generate n conformations based on the number of rotatable bonds (nrot)
nrot ≤ 7, use n = 50; for 8 ≤ nrot ≤ 12, use n = 200; and for nrot ≥ 13, use n = 300.

(2) Energy minimization (using the UFF force field) is performed on every conformer.
The conformer list is sorted by increasing energy value and the lowest energy conformer
(the first conformer in the list), clow, is recorded.

(3) Remove clow from Cgen and add it to Ckeep.

(4) For each conformer, c, in Cgen, compute the rmsd between c and each conformer in Ckeep.

    (a)	If any rmsd value is smaller than a fixed threshold, dmin (0.35 angst) , discard c
        as we already have a representative of that point in conformational space.
    (b)	Otherwise add c to Ckeep

The above process will create an sequence of molecules order by the energy.
Run MPNN on each of the molecules resulting in sequence of graphד which are later fed into a RNN (GRU)
    then to dense layer to classify the right highest affinity target.

For 2D:
transform molecule to graph
run MPNN to get graph output
output MPNN  into dense layer to classify

Steps to load data set:
Create molgraph and label for each molecule and call create_graph
Create LabelBinarizer for each atom feature and bond feature
Split data set into train, validation and test
Create batch and collate batch